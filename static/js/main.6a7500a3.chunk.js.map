{"version":3,"sources":["PokemonList.js","Pagination.js","App.js","index.js"],"names":["PokemonList","pokemon","map","p","Pagination","gotoNextPage","gotoPrevPage","onClick","App","useState","setPokemon","currentPageUrl","setCurrentPageUrl","nextPageUrl","setNextPageUrl","prevPageUrl","setPrevPageUrl","loading","setLoading","useEffect","cancel","axios","get","cancelToken","CancelToken","c","then","response","data","next","previous","results","name","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6JAEe,SAASA,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QACrC,OACC,8BACEA,EAAQC,KAAI,SAAAC,GAAC,OACb,oCAAeA,EAAf,MAAUA,Q,oBCJC,SAASC,EAAT,GAAqD,IAA/BC,EAA8B,EAA9BA,aAAcC,EAAgB,EAAhBA,aACjD,OACE,gCACGA,GAAgB,wBAAQC,QAASD,EAAjB,sBAChBD,GAAgB,wBAAQE,QAASF,EAAjB,qBC2CRG,MA5Cf,WAAgB,IAAD,EACiBC,mBAAS,IAD1B,mBACNR,EADM,KACGS,EADH,OAE+BD,mBAAS,qCAFxC,mBAENE,EAFM,KAEUC,EAFV,OAGyBH,qBAHzB,mBAGNI,EAHM,KAGOC,EAHP,OAIyBL,qBAJzB,mBAINM,EAJM,KAIOC,EAJP,OAKiBP,oBAAS,GAL1B,mBAKNQ,EALM,KAKGC,EALH,KA+Bb,OAvBAC,qBAAU,WAER,IAAIC,EAUJ,OAXAF,GAAW,GAEXG,IAAMC,IAAIX,EAAgB,CACxBY,YAAa,IAAIF,IAAMG,aAAY,SAAAC,GAAC,OAAIL,EAASK,OAChDC,MAAK,SAAAC,GACNT,GAAW,GACXJ,EAAea,EAASC,KAAKC,MAC7Bb,EAAeW,EAASC,KAAKE,UAC7BpB,EAAWiB,EAASC,KAAKG,QAAQ7B,KAAI,SAAAC,GAAC,OAAIA,EAAE6B,YAGvC,kBAAMZ,OACZ,CAACT,IAUAM,EAAgB,aAGlB,qCACE,cAACjB,EAAD,CAAaC,QAASA,IACtB,cAACG,EAAD,CACEC,aAAcQ,EAdpB,WACED,EAAkBC,IAa6B,KAC3CP,aAAcS,EAXpB,WACEH,EAAkBG,IAU6B,WCvCnDkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.6a7500a3.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function PokemonList({ pokemon }){\n\treturn (\n\t\t<div>\n\t\t\t{pokemon.map(p => (\n\t\t\t\t<div key={p}> {p} </div>\n\t\t\t))}\n\t\t</div>\n\t)\t\n}","import React from 'react'\n\nexport default function Pagination({ gotoNextPage, gotoPrevPage }) {\n  return (\n    <div>\n      {gotoPrevPage && <button onClick={gotoPrevPage}>Previous</button>}\n      {gotoNextPage && <button onClick={gotoNextPage}>Next</button>}\n    </div>\n  )\n}","import React, { useState, useEffect } from 'react';\nimport PokemonList from './PokemonList';\nimport axios from 'axios';\nimport Pagination from './Pagination';\n\nfunction App() {\n  const [pokemon, setPokemon] = useState([]);\n  const [currentPageUrl, setCurrentPageUrl] = useState('https://pokeapi.co/api/v2/pokemon')\n  const [nextPageUrl, setNextPageUrl] = useState()\n  const [prevPageUrl, setPrevPageUrl] = useState()\n  const [loading, setLoading] = useState(true)\n\n\n  useEffect(() => {\n    setLoading(true)\n    let cancel\n    axios.get(currentPageUrl, {\n      cancelToken: new axios.CancelToken(c => cancel = c)\n    }).then(response => {\n      setLoading(false)\n      setNextPageUrl(response.data.next)\n      setPrevPageUrl(response.data.previous)\n      setPokemon(response.data.results.map(p => p.name))\n    })\n\n    return () => cancel() \n  }, [currentPageUrl])\n\n  function gotoNextPage() {\n    setCurrentPageUrl(nextPageUrl)\n  }\n\n  function gotoPrevPage() {\n    setCurrentPageUrl(prevPageUrl)\n  }       \n\n  if (loading) return 'Loading...'\n\n  return (\n    <>\n      <PokemonList pokemon={pokemon} />\n      <Pagination \n        gotoNextPage={nextPageUrl ? gotoNextPage : null}\n        gotoPrevPage={prevPageUrl ? gotoPrevPage : null} \n      />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}